{"ast":null,"code":"var _jsxFileName = \"/home/boltuzamaki/Downloads/airtable-form-builder/frontend/src/contexts/FormContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport axios from 'axios';\nimport { createContext, useContext, useReducer } from 'react';\nimport { toast } from 'react-toastify';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  forms: [],\n  currentForm: null,\n  bases: [],\n  tables: [],\n  fields: [],\n  responses: [],\n  analytics: null,\n  loading: false,\n  error: null\n};\n\n// Action types\nconst FORM_ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  SET_ERROR: 'SET_ERROR',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n  SET_FORMS: 'SET_FORMS',\n  SET_CURRENT_FORM: 'SET_CURRENT_FORM',\n  ADD_FORM: 'ADD_FORM',\n  UPDATE_FORM: 'UPDATE_FORM',\n  DELETE_FORM: 'DELETE_FORM',\n  SET_BASES: 'SET_BASES',\n  SET_TABLES: 'SET_TABLES',\n  SET_FIELDS: 'SET_FIELDS',\n  SET_RESPONSES: 'SET_RESPONSES',\n  ADD_RESPONSE: 'ADD_RESPONSE',\n  SET_ANALYTICS: 'SET_ANALYTICS'\n};\n\n// Reducer\nconst formReducer = (state, action) => {\n  var _state$currentForm, _state$currentForm2;\n  switch (action.type) {\n    case FORM_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case FORM_ACTIONS.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case FORM_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    case FORM_ACTIONS.SET_FORMS:\n      return {\n        ...state,\n        forms: action.payload\n      };\n    case FORM_ACTIONS.SET_CURRENT_FORM:\n      return {\n        ...state,\n        currentForm: action.payload\n      };\n    case FORM_ACTIONS.ADD_FORM:\n      return {\n        ...state,\n        forms: [action.payload, ...state.forms]\n      };\n    case FORM_ACTIONS.UPDATE_FORM:\n      return {\n        ...state,\n        forms: state.forms.map(form => form._id === action.payload._id ? action.payload : form),\n        currentForm: ((_state$currentForm = state.currentForm) === null || _state$currentForm === void 0 ? void 0 : _state$currentForm._id) === action.payload._id ? action.payload : state.currentForm\n      };\n    case FORM_ACTIONS.DELETE_FORM:\n      return {\n        ...state,\n        forms: state.forms.filter(form => form._id !== action.payload),\n        currentForm: ((_state$currentForm2 = state.currentForm) === null || _state$currentForm2 === void 0 ? void 0 : _state$currentForm2._id) === action.payload ? null : state.currentForm\n      };\n    case FORM_ACTIONS.SET_BASES:\n      return {\n        ...state,\n        bases: action.payload\n      };\n    case FORM_ACTIONS.SET_TABLES:\n      return {\n        ...state,\n        tables: action.payload\n      };\n    case FORM_ACTIONS.SET_FIELDS:\n      return {\n        ...state,\n        fields: action.payload\n      };\n    case FORM_ACTIONS.SET_RESPONSES:\n      return {\n        ...state,\n        responses: action.payload\n      };\n    case FORM_ACTIONS.ADD_RESPONSE:\n      return {\n        ...state,\n        responses: [action.payload, ...state.responses]\n      };\n    case FORM_ACTIONS.SET_ANALYTICS:\n      return {\n        ...state,\n        analytics: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst FormContext = /*#__PURE__*/createContext();\n\n// Custom hook to use form context\nexport const useForm = () => {\n  _s();\n  const context = useContext(FormContext);\n  if (!context) {\n    throw new Error('useForm must be used within a FormProvider');\n  }\n  return context;\n};\n\n// Form provider component\n_s(useForm, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const FormProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(formReducer, initialState);\n\n  // Helper functions\n  const setLoading = loading => {\n    dispatch({\n      type: FORM_ACTIONS.SET_LOADING,\n      payload: loading\n    });\n  };\n  const setError = error => {\n    dispatch({\n      type: FORM_ACTIONS.SET_ERROR,\n      payload: error\n    });\n  };\n  const clearError = () => {\n    dispatch({\n      type: FORM_ACTIONS.CLEAR_ERROR\n    });\n  };\n\n  // Form management functions\n  const getForms = async (params = {}) => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/forms', {\n        params\n      });\n      dispatch({\n        type: FORM_ACTIONS.SET_FORMS,\n        payload: response.data.forms\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Get forms error:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch forms');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getForm = async id => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`/api/forms/${id}`);\n      dispatch({\n        type: FORM_ACTIONS.SET_CURRENT_FORM,\n        payload: response.data.form\n      });\n      return response.data.form;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Get form error:', error);\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to fetch form');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createForm = async formData => {\n    try {\n      setLoading(true);\n      const response = await axios.post('/api/forms', formData);\n      dispatch({\n        type: FORM_ACTIONS.ADD_FORM,\n        payload: response.data.form\n      });\n      toast.success('Form created successfully!');\n      return response.data.form;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Create form error:', error);\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to create form';\n      setError(message);\n      toast.error(message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateForm = async (id, formData) => {\n    try {\n      setLoading(true);\n      const response = await axios.put(`/api/forms/${id}`, formData);\n      dispatch({\n        type: FORM_ACTIONS.UPDATE_FORM,\n        payload: response.data.form\n      });\n      toast.success('Form updated successfully!');\n      return response.data.form;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('Update form error:', error);\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to update form';\n      setError(message);\n      toast.error(message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const deleteForm = async id => {\n    try {\n      setLoading(true);\n      await axios.delete(`/api/forms/${id}`);\n      dispatch({\n        type: FORM_ACTIONS.DELETE_FORM,\n        payload: id\n      });\n      toast.success('Form deleted successfully!');\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error('Delete form error:', error);\n      const message = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to delete form';\n      setError(message);\n      toast.error(message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const duplicateForm = async (id, title) => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`/api/forms/${id}/duplicate`, {\n        title\n      });\n      dispatch({\n        type: FORM_ACTIONS.ADD_FORM,\n        payload: response.data.form\n      });\n      toast.success('Form duplicated successfully!');\n      return response.data.form;\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      console.error('Duplicate form error:', error);\n      const message = ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Failed to duplicate form';\n      setError(message);\n      toast.error(message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const publishForm = async (id, isPublished) => {\n    try {\n      const response = await axios.post(`/api/forms/${id}/publish`, {\n        isPublished\n      });\n      dispatch({\n        type: FORM_ACTIONS.UPDATE_FORM,\n        payload: response.data.form\n      });\n      toast.success(`Form ${isPublished ? 'published' : 'unpublished'} successfully!`);\n      return response.data.form;\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      console.error('Publish form error:', error);\n      const message = ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Failed to update form status';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Airtable integration functions\n  const getBases = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/airtable/bases');\n      dispatch({\n        type: FORM_ACTIONS.SET_BASES,\n        payload: response.data.bases\n      });\n      return response.data.bases;\n    } catch (error) {\n      var _error$response8, _error$response8$data;\n      console.error('Get bases error:', error);\n      setError(((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Failed to fetch bases');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getTables = async baseId => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`/api/airtable/bases/${baseId}/tables`);\n      dispatch({\n        type: FORM_ACTIONS.SET_TABLES,\n        payload: response.data.tables\n      });\n      return response.data.tables;\n    } catch (error) {\n      var _error$response9, _error$response9$data;\n      console.error('Get tables error:', error);\n      setError(((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.message) || 'Failed to fetch tables');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getFields = async (baseId, tableId) => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`/api/airtable/bases/${baseId}/tables/${tableId}/fields`);\n      dispatch({\n        type: FORM_ACTIONS.SET_FIELDS,\n        payload: response.data.fields\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response0, _error$response0$data;\n      console.error('Get fields error:', error);\n      setError(((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : (_error$response0$data = _error$response0.data) === null || _error$response0$data === void 0 ? void 0 : _error$response0$data.message) || 'Failed to fetch fields');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const testAirtableConnection = async () => {\n    try {\n      const response = await axios.post('/api/airtable/test-connection');\n      toast.success('Airtable connection successful!');\n      return response.data;\n    } catch (error) {\n      var _error$response1, _error$response1$data;\n      console.error('Test connection error:', error);\n      const message = ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.message) || 'Connection test failed';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Response management functions\n  const getResponses = async (formId, params = {}) => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`/api/forms/${formId}/responses`, {\n        params\n      });\n      dispatch({\n        type: FORM_ACTIONS.SET_RESPONSES,\n        payload: response.data.responses\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response10, _error$response10$dat;\n      console.error('Get responses error:', error);\n      setError(((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : (_error$response10$dat = _error$response10.data) === null || _error$response10$dat === void 0 ? void 0 : _error$response10$dat.message) || 'Failed to fetch responses');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const submitResponse = async (formId, responseData, files = []) => {\n    try {\n      const formData = new FormData();\n\n      // Add response data\n      Object.keys(responseData).forEach(key => {\n        formData.append(key, responseData[key]);\n      });\n\n      // Add files\n      files.forEach(file => {\n        formData.append(file.fieldName, file.file);\n      });\n      const response = await axios.post(`/api/responses/submit/${formId}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      dispatch({\n        type: FORM_ACTIONS.ADD_RESPONSE,\n        payload: response.data\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Submit response error:', error);\n      throw error;\n    }\n  };\n  const validateResponse = async (formId, responses) => {\n    try {\n      const response = await axios.post(`/api/responses/validate/${formId}`, {\n        responses\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Validate response error:', error);\n      throw error;\n    }\n  };\n\n  // Analytics functions\n  const getAnalytics = async (formId, params = {}) => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`/api/forms/${formId}/analytics`, {\n        params\n      });\n      dispatch({\n        type: FORM_ACTIONS.SET_ANALYTICS,\n        payload: response.data\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response11, _error$response11$dat;\n      console.error('Get analytics error:', error);\n      setError(((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : (_error$response11$dat = _error$response11.data) === null || _error$response11$dat === void 0 ? void 0 : _error$response11$dat.message) || 'Failed to fetch analytics');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const exportResponses = async (formId, format = 'csv', params = {}) => {\n    try {\n      const response = await axios.get(`/api/responses/export/${formId}`, {\n        params: {\n          format,\n          ...params\n        },\n        responseType: format === 'csv' ? 'blob' : 'json'\n      });\n      if (format === 'csv') {\n        // Create download link for CSV\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', `form_responses_${formId}.csv`);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        window.URL.revokeObjectURL(url);\n      }\n      toast.success('Export completed successfully!');\n      return response.data;\n    } catch (error) {\n      console.error('Export responses error:', error);\n      toast.error('Failed to export responses');\n      throw error;\n    }\n  };\n\n  // Context value\n  const value = {\n    ...state,\n    // Form management\n    getForms,\n    getForm,\n    createForm,\n    updateForm,\n    deleteForm,\n    duplicateForm,\n    publishForm,\n    // Airtable integration\n    getBases,\n    getTables,\n    getFields,\n    testAirtableConnection,\n    // Response management\n    getResponses,\n    submitResponse,\n    validateResponse,\n    // Analytics\n    getAnalytics,\n    exportResponses,\n    // Utility functions\n    setLoading,\n    setError,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(FormContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 432,\n    columnNumber: 5\n  }, this);\n};\n_s2(FormProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = FormProvider;\nvar _c;\n$RefreshReg$(_c, \"FormProvider\");","map":{"version":3,"names":["axios","createContext","useContext","useReducer","toast","jsxDEV","_jsxDEV","initialState","forms","currentForm","bases","tables","fields","responses","analytics","loading","error","FORM_ACTIONS","SET_LOADING","SET_ERROR","CLEAR_ERROR","SET_FORMS","SET_CURRENT_FORM","ADD_FORM","UPDATE_FORM","DELETE_FORM","SET_BASES","SET_TABLES","SET_FIELDS","SET_RESPONSES","ADD_RESPONSE","SET_ANALYTICS","formReducer","state","action","_state$currentForm","_state$currentForm2","type","payload","map","form","_id","filter","FormContext","useForm","_s","context","Error","FormProvider","children","_s2","dispatch","setLoading","setError","clearError","getForms","params","response","get","data","_error$response","_error$response$data","console","message","getForm","id","_error$response2","_error$response2$data","createForm","formData","post","success","_error$response3","_error$response3$data","updateForm","put","_error$response4","_error$response4$data","deleteForm","delete","_error$response5","_error$response5$data","duplicateForm","title","_error$response6","_error$response6$data","publishForm","isPublished","_error$response7","_error$response7$data","getBases","_error$response8","_error$response8$data","getTables","baseId","_error$response9","_error$response9$data","getFields","tableId","_error$response0","_error$response0$data","testAirtableConnection","_error$response1","_error$response1$data","getResponses","formId","_error$response10","_error$response10$dat","submitResponse","responseData","files","FormData","Object","keys","forEach","key","append","file","fieldName","headers","validateResponse","getAnalytics","_error$response11","_error$response11$dat","exportResponses","format","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","revokeObjectURL","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/boltuzamaki/Downloads/airtable-form-builder/frontend/src/contexts/FormContext.js"],"sourcesContent":["import axios from 'axios';\nimport { createContext, useContext, useReducer } from 'react';\nimport { toast } from 'react-toastify';\n\n// Initial state\nconst initialState = {\n  forms: [],\n  currentForm: null,\n  bases: [],\n  tables: [],\n  fields: [],\n  responses: [],\n  analytics: null,\n  loading: false,\n  error: null\n};\n\n// Action types\nconst FORM_ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  SET_ERROR: 'SET_ERROR',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n  SET_FORMS: 'SET_FORMS',\n  SET_CURRENT_FORM: 'SET_CURRENT_FORM',\n  ADD_FORM: 'ADD_FORM',\n  UPDATE_FORM: 'UPDATE_FORM',\n  DELETE_FORM: 'DELETE_FORM',\n  SET_BASES: 'SET_BASES',\n  SET_TABLES: 'SET_TABLES',\n  SET_FIELDS: 'SET_FIELDS',\n  SET_RESPONSES: 'SET_RESPONSES',\n  ADD_RESPONSE: 'ADD_RESPONSE',\n  SET_ANALYTICS: 'SET_ANALYTICS'\n};\n\n// Reducer\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case FORM_ACTIONS.SET_LOADING:\n      return { ...state, loading: action.payload };\n    \n    case FORM_ACTIONS.SET_ERROR:\n      return { ...state, error: action.payload, loading: false };\n    \n    case FORM_ACTIONS.CLEAR_ERROR:\n      return { ...state, error: null };\n    \n    case FORM_ACTIONS.SET_FORMS:\n      return { ...state, forms: action.payload };\n    \n    case FORM_ACTIONS.SET_CURRENT_FORM:\n      return { ...state, currentForm: action.payload };\n    \n    case FORM_ACTIONS.ADD_FORM:\n      return { ...state, forms: [action.payload, ...state.forms] };\n    \n    case FORM_ACTIONS.UPDATE_FORM:\n      return {\n        ...state,\n        forms: state.forms.map(form => \n          form._id === action.payload._id ? action.payload : form\n        ),\n        currentForm: state.currentForm?._id === action.payload._id \n          ? action.payload \n          : state.currentForm\n      };\n    \n    case FORM_ACTIONS.DELETE_FORM:\n      return {\n        ...state,\n        forms: state.forms.filter(form => form._id !== action.payload),\n        currentForm: state.currentForm?._id === action.payload \n          ? null \n          : state.currentForm\n      };\n    \n    case FORM_ACTIONS.SET_BASES:\n      return { ...state, bases: action.payload };\n    \n    case FORM_ACTIONS.SET_TABLES:\n      return { ...state, tables: action.payload };\n    \n    case FORM_ACTIONS.SET_FIELDS:\n      return { ...state, fields: action.payload };\n    \n    case FORM_ACTIONS.SET_RESPONSES:\n      return { ...state, responses: action.payload };\n    \n    case FORM_ACTIONS.ADD_RESPONSE:\n      return { ...state, responses: [action.payload, ...state.responses] };\n    \n    case FORM_ACTIONS.SET_ANALYTICS:\n      return { ...state, analytics: action.payload };\n    \n    default:\n      return state;\n  }\n};\n\n// Create context\nconst FormContext = createContext();\n\n// Custom hook to use form context\nexport const useForm = () => {\n  const context = useContext(FormContext);\n  if (!context) {\n    throw new Error('useForm must be used within a FormProvider');\n  }\n  return context;\n};\n\n// Form provider component\nexport const FormProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(formReducer, initialState);\n\n  // Helper functions\n  const setLoading = (loading) => {\n    dispatch({ type: FORM_ACTIONS.SET_LOADING, payload: loading });\n  };\n\n  const setError = (error) => {\n    dispatch({ type: FORM_ACTIONS.SET_ERROR, payload: error });\n  };\n\n  const clearError = () => {\n    dispatch({ type: FORM_ACTIONS.CLEAR_ERROR });\n  };\n\n  // Form management functions\n  const getForms = async (params = {}) => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/forms', { params });\n      dispatch({ type: FORM_ACTIONS.SET_FORMS, payload: response.data.forms });\n      return response.data;\n    } catch (error) {\n      console.error('Get forms error:', error);\n      setError(error.response?.data?.message || 'Failed to fetch forms');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getForm = async (id) => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`/api/forms/${id}`);\n      dispatch({ type: FORM_ACTIONS.SET_CURRENT_FORM, payload: response.data.form });\n      return response.data.form;\n    } catch (error) {\n      console.error('Get form error:', error);\n      setError(error.response?.data?.message || 'Failed to fetch form');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createForm = async (formData) => {\n    try {\n      setLoading(true);\n      const response = await axios.post('/api/forms', formData);\n      dispatch({ type: FORM_ACTIONS.ADD_FORM, payload: response.data.form });\n      toast.success('Form created successfully!');\n      return response.data.form;\n    } catch (error) {\n      console.error('Create form error:', error);\n      const message = error.response?.data?.message || 'Failed to create form';\n      setError(message);\n      toast.error(message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateForm = async (id, formData) => {\n    try {\n      setLoading(true);\n      const response = await axios.put(`/api/forms/${id}`, formData);\n      dispatch({ type: FORM_ACTIONS.UPDATE_FORM, payload: response.data.form });\n      toast.success('Form updated successfully!');\n      return response.data.form;\n    } catch (error) {\n      console.error('Update form error:', error);\n      const message = error.response?.data?.message || 'Failed to update form';\n      setError(message);\n      toast.error(message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const deleteForm = async (id) => {\n    try {\n      setLoading(true);\n      await axios.delete(`/api/forms/${id}`);\n      dispatch({ type: FORM_ACTIONS.DELETE_FORM, payload: id });\n      toast.success('Form deleted successfully!');\n    } catch (error) {\n      console.error('Delete form error:', error);\n      const message = error.response?.data?.message || 'Failed to delete form';\n      setError(message);\n      toast.error(message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const duplicateForm = async (id, title) => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`/api/forms/${id}/duplicate`, { title });\n      dispatch({ type: FORM_ACTIONS.ADD_FORM, payload: response.data.form });\n      toast.success('Form duplicated successfully!');\n      return response.data.form;\n    } catch (error) {\n      console.error('Duplicate form error:', error);\n      const message = error.response?.data?.message || 'Failed to duplicate form';\n      setError(message);\n      toast.error(message);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const publishForm = async (id, isPublished) => {\n    try {\n      const response = await axios.post(`/api/forms/${id}/publish`, { isPublished });\n      dispatch({ type: FORM_ACTIONS.UPDATE_FORM, payload: response.data.form });\n      toast.success(`Form ${isPublished ? 'published' : 'unpublished'} successfully!`);\n      return response.data.form;\n    } catch (error) {\n      console.error('Publish form error:', error);\n      const message = error.response?.data?.message || 'Failed to update form status';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Airtable integration functions\n  const getBases = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/airtable/bases');\n      dispatch({ type: FORM_ACTIONS.SET_BASES, payload: response.data.bases });\n      return response.data.bases;\n    } catch (error) {\n      console.error('Get bases error:', error);\n      setError(error.response?.data?.message || 'Failed to fetch bases');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getTables = async (baseId) => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`/api/airtable/bases/${baseId}/tables`);\n      dispatch({ type: FORM_ACTIONS.SET_TABLES, payload: response.data.tables });\n      return response.data.tables;\n    } catch (error) {\n      console.error('Get tables error:', error);\n      setError(error.response?.data?.message || 'Failed to fetch tables');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getFields = async (baseId, tableId) => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`/api/airtable/bases/${baseId}/tables/${tableId}/fields`);\n      dispatch({ type: FORM_ACTIONS.SET_FIELDS, payload: response.data.fields });\n      return response.data;\n    } catch (error) {\n      console.error('Get fields error:', error);\n      setError(error.response?.data?.message || 'Failed to fetch fields');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const testAirtableConnection = async () => {\n    try {\n      const response = await axios.post('/api/airtable/test-connection');\n      toast.success('Airtable connection successful!');\n      return response.data;\n    } catch (error) {\n      console.error('Test connection error:', error);\n      const message = error.response?.data?.message || 'Connection test failed';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Response management functions\n  const getResponses = async (formId, params = {}) => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`/api/forms/${formId}/responses`, { params });\n      dispatch({ type: FORM_ACTIONS.SET_RESPONSES, payload: response.data.responses });\n      return response.data;\n    } catch (error) {\n      console.error('Get responses error:', error);\n      setError(error.response?.data?.message || 'Failed to fetch responses');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const submitResponse = async (formId, responseData, files = []) => {\n    try {\n      const formData = new FormData();\n      \n      // Add response data\n      Object.keys(responseData).forEach(key => {\n        formData.append(key, responseData[key]);\n      });\n      \n      // Add files\n      files.forEach(file => {\n        formData.append(file.fieldName, file.file);\n      });\n      \n      const response = await axios.post(`/api/responses/submit/${formId}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      \n      dispatch({ type: FORM_ACTIONS.ADD_RESPONSE, payload: response.data });\n      return response.data;\n    } catch (error) {\n      console.error('Submit response error:', error);\n      throw error;\n    }\n  };\n\n  const validateResponse = async (formId, responses) => {\n    try {\n      const response = await axios.post(`/api/responses/validate/${formId}`, { responses });\n      return response.data;\n    } catch (error) {\n      console.error('Validate response error:', error);\n      throw error;\n    }\n  };\n\n  // Analytics functions\n  const getAnalytics = async (formId, params = {}) => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`/api/forms/${formId}/analytics`, { params });\n      dispatch({ type: FORM_ACTIONS.SET_ANALYTICS, payload: response.data });\n      return response.data;\n    } catch (error) {\n      console.error('Get analytics error:', error);\n      setError(error.response?.data?.message || 'Failed to fetch analytics');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const exportResponses = async (formId, format = 'csv', params = {}) => {\n    try {\n      const response = await axios.get(`/api/responses/export/${formId}`, {\n        params: { format, ...params },\n        responseType: format === 'csv' ? 'blob' : 'json'\n      });\n      \n      if (format === 'csv') {\n        // Create download link for CSV\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', `form_responses_${formId}.csv`);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        window.URL.revokeObjectURL(url);\n      }\n      \n      toast.success('Export completed successfully!');\n      return response.data;\n    } catch (error) {\n      console.error('Export responses error:', error);\n      toast.error('Failed to export responses');\n      throw error;\n    }\n  };\n\n  // Context value\n  const value = {\n    ...state,\n    // Form management\n    getForms,\n    getForm,\n    createForm,\n    updateForm,\n    deleteForm,\n    duplicateForm,\n    publishForm,\n    // Airtable integration\n    getBases,\n    getTables,\n    getFields,\n    testAirtableConnection,\n    // Response management\n    getResponses,\n    submitResponse,\n    validateResponse,\n    // Analytics\n    getAnalytics,\n    exportResponses,\n    // Utility functions\n    setLoading,\n    setError,\n    clearError\n  };\n\n  return (\n    <FormContext.Provider value={value}>\n      {children}\n    </FormContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}